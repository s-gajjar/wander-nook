generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id          String         @id @default(cuid())
  title       String
  slug        String         @unique
  excerpt     String?
  coverImage  String?
  readingTime Int?
  published   Boolean        @default(false)
  publishedAt DateTime?
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  images      Image[]
  categories  PostCategory[]
  sections    PostSection[]
}

model PostSection {
  id         String   @id @default(cuid())
  postId     String
  order      Int
  type       String
  heading    String?
  subheading String?
  content    String?
  imageUrl   String?
  imageAlt   String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  post       Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
}

model Category {
  id        String         @id @default(cuid())
  name      String         @unique
  slug      String         @unique
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
  posts     PostCategory[]
}

model PostCategory {
  postId     String
  categoryId String
  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  post       Post     @relation(fields: [postId], references: [id], onDelete: Cascade)

  @@id([postId, categoryId])
}

model Image {
  id        String   @id @default(cuid())
  url       String
  alt       String?
  width     Int?
  height    Int?
  postId    String?
  createdAt DateTime @default(now())
  post      Post?    @relation(fields: [postId], references: [id], onDelete: Cascade)
}

model SampleRequest {
  id          String   @id @default(cuid())
  name        String
  email       String
  contactNo   String?
  city        String?
  schoolName  String?
  createdAt   DateTime @default(now())
}
